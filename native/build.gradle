/*
 * Copyright (c) 2021
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.gradle.internal.jvm.Jvm

plugins {
    id "java"
    id "c"
}

model {
    platforms {
        x64 {
            architecture "x64"
        }
    }

    components {
        zachtronicsjni(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        srcDirs "src/main/c", "src/jni/c"
                        include "**/*.c"
                        exclude "**/run-tests.c", "**/main.c"
                    }
                    exportedHeaders {
                        srcDirs "src/main/c", "src/jni/c"
                    }
                }
            }
            binaries.all {
                if (targetPlatform.operatingSystem.macOsX) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/darwin"
                    cCompiler.args '-mmacosx-version-min=10.4'
                    cCompiler.args '-O2'
                    cCompiler.args '-g'
                    linker.args '-mmacosx-version-min=10.4'
                } else if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                    cCompiler.args '-O2'
                    cCompiler.args '-g'
                } else if (targetPlatform.operatingSystem.windows) {
                    cCompiler.args "-I${Jvm.current().javaHome}/include"
                    cCompiler.args "-I${Jvm.current().javaHome}/include/win32"
                    cCompiler.args '-O2'
                    cCompiler.args '-g'
                    linker.args "Shlwapi.lib", "Advapi32.lib"
                } else if (targetPlatform.operatingSystem.freeBSD) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/freebsd"
                    cCompiler.args '-O2'
                    cCompiler.args '-g'
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework:spring-core:5.3.13'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

processResources {
    dependsOn ":native:zachtronicsjniSharedLibrary"
    from("$buildDir/libs/zachtronicsjni/") {
        include 'shared/*.so'
    }
}

test {
    dependsOn "zachtronicsjniSharedLibrary"
    useJUnitPlatform()
}
